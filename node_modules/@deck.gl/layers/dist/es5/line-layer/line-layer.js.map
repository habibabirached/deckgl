{"version":3,"sources":["../../../src/line-layer/line-layer.js"],"names":["fp64LowPart","fp64","DEFAULT_COLOR","defaultProps","getSourcePosition","type","value","x","sourcePosition","getTargetPosition","targetPosition","getColor","getStrokeWidth","LineLayer","props","overrideProps","Number","isFinite","strokeWidth","log","deprecated","projectModule","use64bitProjection","vs","fs","modules","attributeManager","getAttributeManager","addInstanced","instanceSourcePositions","size","transition","accessor","instanceTargetPositions","instanceSourceTargetPositions64xyLow","update","calculateInstanceSourceTargetPositions64xyLow","instanceColors","GL","UNSIGNED_BYTE","defaultValue","instanceWidths","oldProps","changeFlags","gl","context","state","model","delete","setState","_getModel","invalidateAll","positions","Model","Object","assign","getShaders","id","geometry","Geometry","drawMode","TRIANGLE_STRIP","attributes","Float32Array","isInstanced","shaderCache","attribute","isFP64","use64bitPositions","constant","data","i","object","Layer","layerName"],"mappings":";;;;;;;AAoBA;;AACA;;AACA;;AAGA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAHOA,W,GAAeC,U,CAAfD,W;AAKP,IAAME,aAAa,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,GAAV,CAAtB;AAEA,IAAMC,YAAY,GAAG;AACnBF,EAAAA,IAAI,EAAE,KADa;AAGnBG,EAAAA,iBAAiB,EAAE;AAACC,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE,eAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,cAAN;AAAA;AAA3B,GAHA;AAInBC,EAAAA,iBAAiB,EAAE;AAACJ,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE,eAAAC,CAAC;AAAA,aAAIA,CAAC,CAACG,cAAN;AAAA;AAA3B,GAJA;AAKnBC,EAAAA,QAAQ,EAAE;AAACN,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAEJ;AAA1B,GALS;AAMnBU,EAAAA,cAAc,EAAE;AAACP,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE;AAA1B;AANG,CAArB;;IASqBO,S;;;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AACjB,QAAIC,aAAa,GAAG,IAApB;;AACA,QAAIC,MAAM,CAACC,QAAP,CAAgBH,KAAK,CAACI,WAAtB,CAAJ,EAAwC;AACtCC,gBAAIC,UAAJ,CAAe,0BAAf,EAA2C,kBAA3C;;AACAL,MAAAA,aAAa,GAAG;AACdH,QAAAA,cAAc,EAAEE,KAAK,CAACI;AADR,OAAhB;AAGD;;AAPgB,kFAQXJ,KARW,EAQJC,aARI;AASlB;;;;iCAEY;AACX,UAAMM,aAAa,GAAG,KAAKC,kBAAL,KAA4B,WAA5B,GAA0C,WAAhE;AACA,aAAO;AAACC,QAAAA,EAAE,EAAFA,wBAAD;AAAKC,QAAAA,EAAE,EAAFA,0BAAL;AAASC,QAAAA,OAAO,EAAE,CAACJ,aAAD,EAAgB,SAAhB;AAAlB,OAAP;AACD;;;sCAEiB;AAChB,UAAMK,gBAAgB,GAAG,KAAKC,mBAAL,EAAzB;AAEA;;AACAD,MAAAA,gBAAgB,CAACE,YAAjB,CAA8B;AAC5BC,QAAAA,uBAAuB,EAAE;AACvBC,UAAAA,IAAI,EAAE,CADiB;AAEvBC,UAAAA,UAAU,EAAE,IAFW;AAGvBC,UAAAA,QAAQ,EAAE;AAHa,SADG;AAM5BC,QAAAA,uBAAuB,EAAE;AACvBH,UAAAA,IAAI,EAAE,CADiB;AAEvBC,UAAAA,UAAU,EAAE,IAFW;AAGvBC,UAAAA,QAAQ,EAAE;AAHa,SANG;AAW5BE,QAAAA,oCAAoC,EAAE;AACpCJ,UAAAA,IAAI,EAAE,CAD8B;AAEpCE,UAAAA,QAAQ,EAAE,CAAC,mBAAD,EAAsB,mBAAtB,CAF0B;AAGpCG,UAAAA,MAAM,EAAE,KAAKC;AAHuB,SAXV;AAgB5BC,QAAAA,cAAc,EAAE;AACdP,UAAAA,IAAI,EAAE,CADQ;AAEdzB,UAAAA,IAAI,EAAEiC,mBAAGC,aAFK;AAGdR,UAAAA,UAAU,EAAE,IAHE;AAIdC,UAAAA,QAAQ,EAAE,UAJI;AAKdQ,UAAAA,YAAY,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,GAAV;AALA,SAhBY;AAuB5BC,QAAAA,cAAc,EAAE;AACdX,UAAAA,IAAI,EAAE,CADQ;AAEdC,UAAAA,UAAU,EAAE,IAFE;AAGdC,UAAAA,QAAQ,EAAE,gBAHI;AAIdQ,UAAAA,YAAY,EAAE;AAJA;AAvBY,OAA9B;AA8BA;AACD;;;sCAE2C;AAAA,UAA/B1B,KAA+B,QAA/BA,KAA+B;AAAA,UAAxB4B,QAAwB,QAAxBA,QAAwB;AAAA,UAAdC,WAAc,QAAdA,WAAc;;AAC1C,iFAAkB;AAAC7B,QAAAA,KAAK,EAALA,KAAD;AAAQ4B,QAAAA,QAAQ,EAARA,QAAR;AAAkBC,QAAAA,WAAW,EAAXA;AAAlB,OAAlB;;AAEA,UAAI7B,KAAK,CAACb,IAAN,KAAeyC,QAAQ,CAACzC,IAA5B,EAAkC;AAAA,YACzB2C,EADyB,GACnB,KAAKC,OADc,CACzBD,EADyB;;AAEhC,YAAI,KAAKE,KAAL,CAAWC,KAAf,EAAsB;AACpB,eAAKD,KAAL,CAAWC,KAAX,CAAiBC,MAAjB;AACD;;AACD,aAAKC,QAAL,CAAc;AAACF,UAAAA,KAAK,EAAE,KAAKG,SAAL,CAAeN,EAAf;AAAR,SAAd;AACA,aAAKjB,mBAAL,GAA2BwB,aAA3B;AACD;AACF;;;8BAESP,E,EAAI;AACZ;;;;;;;AAOA,UAAMQ,SAAS,GAAG,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAC,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,CAAlB;AAEA,aAAO,IAAIC,WAAJ,CACLT,EADK,EAELU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,UAAL,EAAlB,EAAqC;AACnCC,QAAAA,EAAE,EAAE,KAAK3C,KAAL,CAAW2C,EADoB;AAEnCC,QAAAA,QAAQ,EAAE,IAAIC,cAAJ,CAAa;AACrBC,UAAAA,QAAQ,EAAEtB,mBAAGuB,cADQ;AAErBC,UAAAA,UAAU,EAAE;AACVV,YAAAA,SAAS,EAAE,IAAIW,YAAJ,CAAiBX,SAAjB;AADD;AAFS,SAAb,CAFyB;AAQnCY,QAAAA,WAAW,EAAE,IARsB;AASnCC,QAAAA,WAAW,EAAE,KAAKpB,OAAL,CAAaoB;AATS,OAArC,CAFK,CAAP;AAcD;;;kEAE6CC,S,EAAW;AACvD,UAAMC,MAAM,GAAG,KAAKC,iBAAL,EAAf;AACAF,MAAAA,SAAS,CAACG,QAAV,GAAqB,CAACF,MAAtB;;AAEA,UAAI,CAACA,MAAL,EAAa;AACXD,QAAAA,SAAS,CAAC5D,KAAV,GAAkB,IAAIyD,YAAJ,CAAiB,CAAjB,CAAlB;AACA;AACD;;AAPsD,wBASF,KAAKjD,KATH;AAAA,UAShDwD,IATgD,eAShDA,IATgD;AAAA,UAS1ClE,iBAT0C,eAS1CA,iBAT0C;AAAA,UASvBK,iBATuB,eASvBA,iBATuB;AAAA,UAUhDH,KAVgD,GAUjC4D,SAViC,CAUhD5D,KAVgD;AAAA,UAUzCwB,IAVyC,GAUjCoC,SAViC,CAUzCpC,IAVyC;AAWvD,UAAIyC,CAAC,GAAG,CAAR;AAXuD;AAAA;AAAA;;AAAA;AAYvD,6BAAqBD,IAArB,8HAA2B;AAAA,cAAhBE,MAAgB;AACzB,cAAMhE,cAAc,GAAGJ,iBAAiB,CAACoE,MAAD,CAAxC;AACA,cAAM9D,cAAc,GAAGD,iBAAiB,CAAC+D,MAAD,CAAxC;AACAlE,UAAAA,KAAK,CAACiE,CAAC,GAAG,CAAL,CAAL,GAAevE,WAAW,CAACQ,cAAc,CAAC,CAAD,CAAf,CAA1B;AACAF,UAAAA,KAAK,CAACiE,CAAC,GAAG,CAAL,CAAL,GAAevE,WAAW,CAACQ,cAAc,CAAC,CAAD,CAAf,CAA1B;AACAF,UAAAA,KAAK,CAACiE,CAAC,GAAG,CAAL,CAAL,GAAevE,WAAW,CAACU,cAAc,CAAC,CAAD,CAAf,CAA1B;AACAJ,UAAAA,KAAK,CAACiE,CAAC,GAAG,CAAL,CAAL,GAAevE,WAAW,CAACU,cAAc,CAAC,CAAD,CAAf,CAA1B;AACA6D,UAAAA,CAAC,IAAIzC,IAAL;AACD;AApBsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBxD;;;;EAlHoC2C,W;;;AAqHvC5D,SAAS,CAAC6D,SAAV,GAAsB,WAAtB;AACA7D,SAAS,CAACV,YAAV,GAAyBA,YAAzB","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, log} from '@deck.gl/core';\nimport GL from 'luma.gl/constants';\nimport {Model, Geometry, fp64} from 'luma.gl';\nconst {fp64LowPart} = fp64;\n\nimport vs from './line-layer-vertex.glsl';\nimport fs from './line-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  fp64: false,\n\n  getSourcePosition: {type: 'accessor', value: x => x.sourcePosition},\n  getTargetPosition: {type: 'accessor', value: x => x.targetPosition},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getStrokeWidth: {type: 'accessor', value: 1}\n};\n\nexport default class LineLayer extends Layer {\n  constructor(props) {\n    let overrideProps = null;\n    if (Number.isFinite(props.strokeWidth)) {\n      log.deprecated('LineLayer: `strokeWidth`', '`getStrokeWidth`')();\n      overrideProps = {\n        getStrokeWidth: props.strokeWidth\n      };\n    }\n    super(props, overrideProps);\n  }\n\n  getShaders() {\n    const projectModule = this.use64bitProjection() ? 'project64' : 'project32';\n    return {vs, fs, modules: [projectModule, 'picking']};\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceSourcePositions: {\n        size: 3,\n        transition: true,\n        accessor: 'getSourcePosition'\n      },\n      instanceTargetPositions: {\n        size: 3,\n        transition: true,\n        accessor: 'getTargetPosition'\n      },\n      instanceSourceTargetPositions64xyLow: {\n        size: 4,\n        accessor: ['getSourcePosition', 'getTargetPosition'],\n        update: this.calculateInstanceSourceTargetPositions64xyLow\n      },\n      instanceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        accessor: 'getColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getStrokeWidth',\n        defaultValue: 1\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  _getModel(gl) {\n    /*\n     *  (0, -1)-------------_(1, -1)\n     *       |          _,-\"  |\n     *       o      _,-\"      o\n     *       |  _,-\"          |\n     *   (0, 1)\"-------------(1, 1)\n     */\n    const positions = [0, -1, 0, 0, 1, 0, 1, -1, 0, 1, 1, 0];\n\n    return new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_STRIP,\n          attributes: {\n            positions: new Float32Array(positions)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n  }\n\n  calculateInstanceSourceTargetPositions64xyLow(attribute) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(4);\n      return;\n    }\n\n    const {data, getSourcePosition, getTargetPosition} = this.props;\n    const {value, size} = attribute;\n    let i = 0;\n    for (const object of data) {\n      const sourcePosition = getSourcePosition(object);\n      const targetPosition = getTargetPosition(object);\n      value[i + 0] = fp64LowPart(sourcePosition[0]);\n      value[i + 1] = fp64LowPart(sourcePosition[1]);\n      value[i + 2] = fp64LowPart(targetPosition[0]);\n      value[i + 3] = fp64LowPart(targetPosition[1]);\n      i += size;\n    }\n  }\n}\n\nLineLayer.layerName = 'LineLayer';\nLineLayer.defaultProps = defaultProps;\n"],"file":"line-layer.js"}