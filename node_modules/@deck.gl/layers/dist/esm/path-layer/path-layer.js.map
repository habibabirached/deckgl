{"version":3,"sources":["../../../src/path-layer/path-layer.js"],"names":["Layer","GL","Model","Geometry","fp64","fp64LowPart","vs","vs64","fs","DEFAULT_COLOR","defaultProps","widthScale","type","min","value","widthMinPixels","widthMaxPixels","Number","MAX_SAFE_INTEGER","rounded","miterLimit","dashJustified","getPath","object","path","getColor","getWidth","getDashArray","isClosed","firstPoint","lastPoint","length","ATTRIBUTE_TRANSITION","enter","chunk","subarray","PathLayer","use64bitProjection","modules","attributeManager","getAttributeManager","addInstanced","instanceStartPositions","size","transition","accessor","update","calculateStartPositions","instanceEndPositions","calculateEndPositions","instanceStartEndPositions64xyLow","calculateInstanceStartEndPositions64xyLow","instanceLeftDeltas","calculateLeftDeltas","instanceRightDeltas","calculateRightDeltas","instanceStrokeWidths","calculateStrokeWidths","defaultValue","instanceDashArrays","calculateDashArrays","instanceColors","UNSIGNED_BYTE","calculateColors","instancePickingColors","calculatePickingColors","oldProps","props","changeFlags","gl","context","state","model","delete","setState","_getModel","invalidateAll","geometryChanged","dataChanged","updateTriggersChanged","all","paths","data","push","bufferLayout","map","numInstances","reduce","count","segments","uniforms","render","Object","assign","jointType","alignMode","SEGMENT_INDICES","SEGMENT_POSITIONS","getShaders","id","geometry","drawMode","TRIANGLES","attributes","indices","Uint16Array","positions","Float32Array","isInstanced","shaderCache","attribute","i","forEach","numSegments","ptIndex","point","isFP64","use64bitPositions","constant","startPoint","endPoint","prevPoint","nextPoint","index","width","pathLength","_getPathLength","dashArray","pointColor","isNaN","pickingColor","encodePickingColor","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer} from '@deck.gl/core';\nimport GL from 'luma.gl/constants';\nimport {Model, Geometry, fp64} from 'luma.gl';\nconst {fp64LowPart} = fp64;\n\nimport vs from './path-layer-vertex.glsl';\nimport vs64 from './path-layer-vertex-64.glsl';\nimport fs from './path-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  widthScale: {type: 'number', min: 0, value: 1}, // stroke width in meters\n  widthMinPixels: {type: 'number', min: 0, value: 0}, //  min stroke width in pixels\n  widthMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER}, // max stroke width in pixels\n  rounded: false,\n  miterLimit: {type: 'number', min: 0, value: 4},\n  fp64: false,\n  dashJustified: false,\n\n  getPath: {type: 'accessor', value: object => object.path},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getWidth: {type: 'accessor', value: 1},\n  getDashArray: {type: 'accessor', value: [0, 0]}\n};\n\nconst isClosed = path => {\n  const firstPoint = path[0];\n  const lastPoint = path[path.length - 1];\n  return (\n    firstPoint[0] === lastPoint[0] &&\n    firstPoint[1] === lastPoint[1] &&\n    firstPoint[2] === lastPoint[2]\n  );\n};\n\nconst ATTRIBUTE_TRANSITION = {\n  enter: (value, chunk) => {\n    return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n  }\n};\n\nexport default class PathLayer extends Layer {\n  getShaders() {\n    return this.use64bitProjection()\n      ? {vs: vs64, fs, modules: ['project64', 'picking']}\n      : {vs, fs, modules: ['picking']}; // 'project' module added by default.\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceStartPositions: {\n        size: 3,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPath',\n        update: this.calculateStartPositions\n      },\n      instanceEndPositions: {\n        size: 3,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPath',\n        update: this.calculateEndPositions\n      },\n      instanceStartEndPositions64xyLow: {\n        size: 4,\n        update: this.calculateInstanceStartEndPositions64xyLow\n      },\n      instanceLeftDeltas: {size: 3, update: this.calculateLeftDeltas},\n      instanceRightDeltas: {size: 3, update: this.calculateRightDeltas},\n      instanceStrokeWidths: {\n        size: 1,\n        accessor: 'getWidth',\n        transition: ATTRIBUTE_TRANSITION,\n        update: this.calculateStrokeWidths,\n        defaultValue: 1\n      },\n      instanceDashArrays: {size: 2, accessor: 'getDashArray', update: this.calculateDashArrays},\n      instanceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getColor',\n        transition: ATTRIBUTE_TRANSITION,\n        update: this.calculateColors,\n        defaultValue: DEFAULT_COLOR\n      },\n      instancePickingColors: {size: 3, type: GL.UNSIGNED_BYTE, update: this.calculatePickingColors}\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateState({oldProps, props, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n\n    const {getPath} = this.props;\n    const attributeManager = this.getAttributeManager();\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      attributeManager.invalidateAll();\n    }\n\n    const geometryChanged =\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPath));\n\n    if (geometryChanged) {\n      // this.state.paths only stores point positions in each path\n      const paths = [];\n      for (const object of props.data) {\n        paths.push(getPath(object));\n      }\n      const bufferLayout = paths.map(path => path.length - 1);\n      const numInstances = bufferLayout.reduce((count, segments) => count + segments, 0);\n\n      this.setState({\n        paths,\n        numInstances,\n        bufferLayout\n      });\n      attributeManager.invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {\n      rounded,\n      miterLimit,\n      widthScale,\n      widthMinPixels,\n      widthMaxPixels,\n      dashJustified\n    } = this.props;\n\n    this.state.model.render(\n      Object.assign({}, uniforms, {\n        jointType: Number(rounded),\n        alignMode: Number(dashJustified),\n        widthScale,\n        miterLimit,\n        widthMinPixels,\n        widthMaxPixels\n      })\n    );\n  }\n\n  _getModel(gl) {\n    /*\n     *       _\n     *        \"-_ 1                   3                       5\n     *     _     \"o---------------------o-------------------_-o\n     *       -   / \"\"--..__              '.             _.-' /\n     *   _     \"@- - - - - \"\"--..__- - - - x - - - -_.@'    /\n     *    \"-_  /                   \"\"--..__ '.  _,-` :     /\n     *       \"o----------------------------\"\"-o'    :     /\n     *      0,2                            4 / '.  :     /\n     *                                      /   '.:     /\n     *                                     /     :'.   /\n     *                                    /     :  ', /\n     *                                   /     :     o\n     */\n\n    const SEGMENT_INDICES = [\n      // start corner\n      0,\n      2,\n      1,\n      // body\n      1,\n      2,\n      4,\n      1,\n      4,\n      3,\n      // end corner\n      3,\n      4,\n      5\n    ];\n\n    // [0] position on segment - 0: start, 1: end\n    // [1] side of path - -1: left, 0: center, 1: right\n    // [2] role - 0: offset point 1: joint point\n    const SEGMENT_POSITIONS = [\n      // bevel start corner\n      0,\n      0,\n      1,\n      // start inner corner\n      0,\n      -1,\n      0,\n      // start outer corner\n      0,\n      1,\n      0,\n      // end inner corner\n      1,\n      -1,\n      0,\n      // end outer corner\n      1,\n      1,\n      0,\n      // bevel end corner\n      1,\n      0,\n      1\n    ];\n\n    return new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLES,\n          attributes: {\n            indices: new Uint16Array(SEGMENT_INDICES),\n            positions: new Float32Array(SEGMENT_POSITIONS)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n  }\n\n  // \"Experimental\" method indended to make it easier to support non-nested arrays in subclasses\n  _getPathLength(path) {\n    return path.length;\n  }\n\n  calculateStartPositions(attribute) {\n    const {paths, bufferLayout} = this.state;\n    const {value} = attribute;\n\n    attribute.bufferLayout = bufferLayout;\n\n    let i = 0;\n    paths.forEach(path => {\n      const numSegments = path.length - 1;\n      for (let ptIndex = 0; ptIndex < numSegments; ptIndex++) {\n        const point = path[ptIndex];\n        value[i++] = point[0];\n        value[i++] = point[1];\n        value[i++] = point[2] || 0;\n      }\n    });\n  }\n\n  calculateEndPositions(attribute) {\n    const {paths, bufferLayout} = this.state;\n    const {value} = attribute;\n\n    attribute.bufferLayout = bufferLayout;\n\n    let i = 0;\n    paths.forEach(path => {\n      for (let ptIndex = 1; ptIndex < path.length; ptIndex++) {\n        const point = path[ptIndex];\n        value[i++] = point[0];\n        value[i++] = point[1];\n        value[i++] = point[2] || 0;\n      }\n    });\n  }\n\n  calculateInstanceStartEndPositions64xyLow(attribute) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(4);\n      return;\n    }\n\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach(path => {\n      const numSegments = path.length - 1;\n      for (let ptIndex = 0; ptIndex < numSegments; ptIndex++) {\n        const startPoint = path[ptIndex];\n        const endPoint = path[ptIndex + 1];\n        value[i++] = fp64LowPart(startPoint[0]);\n        value[i++] = fp64LowPart(startPoint[1]);\n        value[i++] = fp64LowPart(endPoint[0]);\n        value[i++] = fp64LowPart(endPoint[1]);\n      }\n    });\n  }\n\n  calculateLeftDeltas(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach(path => {\n      const numSegments = path.length - 1;\n      let prevPoint = isClosed(path) ? path[path.length - 2] : path[0];\n\n      for (let ptIndex = 0; ptIndex < numSegments; ptIndex++) {\n        const point = path[ptIndex];\n        value[i++] = point[0] - prevPoint[0];\n        value[i++] = point[1] - prevPoint[1];\n        value[i++] = point[2] - prevPoint[2] || 0;\n        prevPoint = point;\n      }\n    });\n  }\n\n  calculateRightDeltas(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach(path => {\n      for (let ptIndex = 1; ptIndex < path.length; ptIndex++) {\n        const point = path[ptIndex];\n        let nextPoint = path[ptIndex + 1];\n        if (!nextPoint) {\n          nextPoint = isClosed(path) ? path[1] : point;\n        }\n\n        value[i++] = nextPoint[0] - point[0];\n        value[i++] = nextPoint[1] - point[1];\n        value[i++] = nextPoint[2] - point[2] || 0;\n      }\n    });\n  }\n\n  calculateStrokeWidths(attribute) {\n    const {data, getWidth} = this.props;\n    const {paths, bufferLayout} = this.state;\n    const {value} = attribute;\n\n    attribute.bufferLayout = bufferLayout;\n\n    let i = 0;\n    paths.forEach((path, index) => {\n      const width = getWidth(data[index], index);\n\n      const pathLength = this._getPathLength(path);\n      for (let ptIndex = 1; ptIndex < pathLength; ptIndex++) {\n        value[i++] = width;\n      }\n    });\n  }\n\n  calculateDashArrays(attribute) {\n    const {data, getDashArray} = this.props;\n    if (!getDashArray) {\n      return;\n    }\n\n    const {paths} = this.state;\n    const {value} = attribute;\n    let i = 0;\n    paths.forEach((path, index) => {\n      const dashArray = getDashArray(data[index], index);\n\n      const pathLength = this._getPathLength(path);\n      for (let ptIndex = 1; ptIndex < pathLength; ptIndex++) {\n        value[i++] = dashArray[0];\n        value[i++] = dashArray[1];\n      }\n    });\n  }\n\n  calculateColors(attribute) {\n    const {data, getColor} = this.props;\n    const {paths, bufferLayout} = this.state;\n    const {value} = attribute;\n\n    attribute.bufferLayout = bufferLayout;\n\n    let i = 0;\n    paths.forEach((path, index) => {\n      const pointColor = getColor(data[index], index);\n      if (isNaN(pointColor[3])) {\n        pointColor[3] = 255;\n      }\n\n      const pathLength = this._getPathLength(path);\n      for (let ptIndex = 1; ptIndex < pathLength; ptIndex++) {\n        value[i++] = pointColor[0];\n        value[i++] = pointColor[1];\n        value[i++] = pointColor[2];\n        value[i++] = pointColor[3];\n      }\n    });\n  }\n\n  // Override the default picking colors calculation\n  calculatePickingColors(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach((path, index) => {\n      const pickingColor = this.encodePickingColor(index);\n\n      const pathLength = this._getPathLength(path);\n      for (let ptIndex = 1; ptIndex < pathLength; ptIndex++) {\n        value[i++] = pickingColor[0];\n        value[i++] = pickingColor[1];\n        value[i++] = pickingColor[2];\n      }\n    });\n  }\n}\n\nPathLayer.layerName = 'PathLayer';\nPathLayer.defaultProps = defaultProps;\n"],"file":"path-layer.js"}