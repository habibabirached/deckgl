{"version":3,"sources":["../../../src/scatterplot-layer/scatterplot-layer.js"],"names":["Layer","GL","Model","Geometry","fp64","fp64LowPart","vs","fs","DEFAULT_COLOR","defaultProps","radiusScale","type","min","value","radiusMinPixels","radiusMaxPixels","Number","MAX_SAFE_INTEGER","strokeWidth","outline","getPosition","x","position","getRadius","getColor","ScatterplotLayer","getShaders","id","projectModule","use64bitProjection","modules","initializeState","getAttributeManager","addInstanced","instancePositions","size","transition","accessor","instancePositions64xyLow","update","calculateInstancePositions64xyLow","instanceRadius","defaultValue","instanceColors","UNSIGNED_BYTE","updateState","props","oldProps","changeFlags","gl","context","state","model","delete","setState","_getModel","invalidateAll","draw","uniforms","render","Object","assign","positions","geometry","drawMode","TRIANGLE_FAN","attributes","Float32Array","isInstanced","shaderCache","attribute","isFP64","use64bitPositions","constant","data","i","point","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer} from '@deck.gl/core';\nimport GL from 'luma.gl/constants';\nimport {Model, Geometry, fp64} from 'luma.gl';\nconst {fp64LowPart} = fp64;\n\nimport vs from './scatterplot-layer-vertex.glsl';\nimport fs from './scatterplot-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  radiusScale: {type: 'number', min: 0, value: 1},\n  radiusMinPixels: {type: 'number', min: 0, value: 0}, //  min point radius in pixels\n  radiusMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER}, // max point radius in pixels\n  strokeWidth: {type: 'number', min: 0, value: 1},\n  outline: false,\n  fp64: false,\n\n  getPosition: {type: 'accessor', value: x => x.position},\n  getRadius: {type: 'accessor', value: 1},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR}\n};\n\nexport default class ScatterplotLayer extends Layer {\n  getShaders(id) {\n    const projectModule = this.use64bitProjection() ? 'project64' : 'project32';\n    return {vs, fs, modules: [projectModule, 'picking']};\n  }\n\n  initializeState() {\n    this.getAttributeManager().addInstanced({\n      instancePositions: {\n        size: 3,\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instancePositions64xyLow: {\n        size: 2,\n        accessor: 'getPosition',\n        update: this.calculateInstancePositions64xyLow\n      },\n      instanceRadius: {\n        size: 1,\n        transition: true,\n        accessor: 'getRadius',\n        defaultValue: 1\n      },\n      instanceColors: {\n        size: 4,\n        transition: true,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getColor',\n        defaultValue: [0, 0, 0, 255]\n      }\n    });\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {radiusScale, radiusMinPixels, radiusMaxPixels, outline, strokeWidth} = this.props;\n    this.state.model.render(\n      Object.assign({}, uniforms, {\n        outline: outline ? 1 : 0,\n        strokeWidth,\n        radiusScale,\n        radiusMinPixels,\n        radiusMaxPixels\n      })\n    );\n  }\n\n  _getModel(gl) {\n    // a square that minimally cover the unit circle\n    const positions = [-1, -1, 0, -1, 1, 0, 1, 1, 0, 1, -1, 0];\n\n    return new Model(\n      gl,\n      Object.assign(this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_FAN,\n          attributes: {\n            positions: new Float32Array(positions)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n  }\n\n  calculateInstancePositions64xyLow(attribute) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(2);\n      return;\n    }\n\n    const {data, getPosition} = this.props;\n    const {value} = attribute;\n    let i = 0;\n    for (const point of data) {\n      const position = getPosition(point);\n      value[i++] = fp64LowPart(position[0]);\n      value[i++] = fp64LowPart(position[1]);\n    }\n  }\n}\n\nScatterplotLayer.layerName = 'ScatterplotLayer';\nScatterplotLayer.defaultProps = defaultProps;\n"],"file":"scatterplot-layer.js"}